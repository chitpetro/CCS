using System;
using System.Linq;
using System.Windows.Forms;
using BUS;
using ControlLocalizer;
using DAL;
using DevExpress.XtraBars;
using DevExpress.XtraEditors;

namespace GUI
{
    public partial class f_duyeths : Form
    {
        private readonly KetNoiDBDataContext db = new KetNoiDBDataContext();
        t_todatatable _tTodatatable = new t_todatatable();
        private readonly t_duyeths dt = new t_duyeths();
        private readonly t_history hs = new t_history();

        public f_duyeths()
        {
            InitializeComponent();

            txtid.ReadOnly = true;
            txtloai.ReadOnly = true;


            // This line of code is generated by Data Source Configuration Wizard
        }

        private void f_themdoituong_Load(object sender, EventArgs e)
        {
            LanguageHelper.Translate(this);
            LanguageHelper.Translate(barManager1);

            changeFont.Translate(this);
            changeFont.Translate(barManager1);

            var lsta = from a in db.vanbandens where a.iddv == Biencucbo.donvi select a;
            slulink.Properties.DataSource = _tTodatatable.addlst(lsta.ToList());

            var lst = (from dt in db.duyeths where dt.id == Biencucbo.idduyet select dt).ToList();
            if (lst.Count() != 0)
            {
                var lst2 = (from a in lst select a).First(t => t.id == Biencucbo.idduyet);
                txtid.Text = Biencucbo.idduyet;
                txtloai.Text = lst2.loai;
                txtiduser.Text = lst2.iduser;
                try
                {
                    var lst3 = (from a in db.accounts select a).First(t => t.id == txtiduser.Text);
                    lbluser.Text = lst3.name;
                }
                catch
                {
                    lbluser.Text = "Không tìm thấy tên nhân viên";
                }

                if (lst2.T == true)
                {
                    tr.Checked = true;
                }
                else
                {
                    tr.Checked = false;
                }
                if (lst2.F == true)
                {
                    fl.Checked = true;
                }
                else
                {
                    fl.Checked = false;
                }

                txtghichu.Text = lst2.ghichu;
                slulink.Text = lst2.link;
                Biencucbo.hdduyet = 2;
                luu.Enabled = false;

                btnsua.Enabled = true;
                btnhuy.Enabled = true;
                txtiduser.ReadOnly = true;
                txtghichu.ReadOnly = true;
                slulink.ReadOnly = true;
                tr.ReadOnly = true;
                fl.ReadOnly = false;
            }
            else
            {
                txtiduser.ReadOnly = true;
                txtghichu.ReadOnly = false;
                slulink.ReadOnly = false;
                tr.ReadOnly = false;
                fl.ReadOnly = false;

                txtid.Text = Biencucbo.idduyet;
                txtiduser.Text = Biencucbo.idnv;
                try
                {
                    var lst3 = (from a in db.accounts select a).First(t => t.id == txtiduser.Text);
                    lbluser.Text = lst3.name;
                }
                catch
                {
                    lbluser.Text = "Không tìm thấy tên nhân viên";
                }
                txtloai.Text = Biencucbo.loaiduyet;
                txtghichu.Text = "";
                slulink.Text = "";
                Biencucbo.hdduyet = 0;
                luu.Enabled = true;
                btnsua.Enabled = false;
                btnhuy.Enabled = false;
            }
        }

        private void btnhuy_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (Biencucbo.hdduyet == 2)
            {
                if (txtiduser.Text != Biencucbo.idnv)
                {
                    MessageBox.Show(
                        "Bạn Không phải người duyệt hồ sơ này nên bạn không có quyền xóa. Vui lòng liên hệ người duyệt hồ sơ này hoặc Admin để được hỗ trợ!",
                        "Thông Báo");
                    return;
                }

                if (
                    XtraMessageBox.Show("Bạn có chắc chắn muốn xóa  không?", "THÔNG BÁO", MessageBoxButtons.YesNo,
                        MessageBoxIcon.Question) == DialogResult.Yes)
                {
                    dt.xoa(txtid.Text);
                    luu.Enabled = false;
                    btnsua.Enabled = false;
                    btnhuy.Enabled = false;
                    txtid.Text = "";
                    txtghichu.Text = "";
                    slulink.Text = "";
                    txtloai.Text = "";
                    txtiduser.Text = "";
                    tr.Checked = false;
                    fl.Checked = false;
                }
            }
        }

        private void luu_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (tr.Checked == false && fl.Checked == false)
            {
                MessageBox.Show("Vui lòng chọn đồng ý hoặc không đồng ý", "Thông Báo");
                return;
            }
            if (Biencucbo.hdduyet == 0)
            {
                //khong cho trung ID va Ten


                dt.moi(txtid.Text.Trim(), txtiduser.Text, txtloai.Text, txtghichu.Text, tr.Checked, fl.Checked,
                    slulink.Text);
                luu.Enabled = false;
                btnsua.Enabled = true;

                btnhuy.Enabled = true;

                tr.ReadOnly = true;
                fl.ReadOnly = true;
                txtiduser.ReadOnly = true;
                txtghichu.ReadOnly = true;
                slulink.ReadOnly = true;

                hs.add(txtid.Text, "Thêm mới duyệt HS: " + txtloai.Text);
            }
            else
            {
                dt.sua(txtid.Text, txtiduser.Text, txtloai.Text, txtghichu.Text, tr.Checked, fl.Checked, slulink.Text);
                luu.Enabled = false;
                btnsua.Enabled = true;

                btnhuy.Enabled = true;
                txtiduser.ReadOnly = true;
                txtghichu.ReadOnly = true;
                slulink.ReadOnly = true;
                tr.ReadOnly = true;
                fl.ReadOnly = true;

                hs.add(txtid.Text, "Sửa duyệt HS: " + txtloai.Text);
            }
        }

        private void fl_CheckedChanged(object sender, EventArgs e)
        {
            if (fl.Checked)
            {
                tr.Checked = false;
            }
            else if (fl.Checked == false)
            {
                tr.Checked = true;
            }
        }

        private void tr_CheckedChanged(object sender, EventArgs e)
        {
            if (tr.Checked)
            {
                fl.Checked = false;
            }
            else if (tr.Checked == false)
            {
                fl.Checked = true;
            }
        }

        private void btnsua_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (txtiduser.Text != Biencucbo.idnv)
            {
                MessageBox.Show(
                    "Bạn Không phải người duyệt hồ sơ này nên bạn không có quyền sửa. Vui lòng liên hệ người duyệt hồ sơ này hoặc Admin để được hỗ trợ!",
                    "Thông Báo");
                return;
            }
            luu.Enabled = true;
            btnsua.Enabled = false;
            btnhuy.Enabled = false;
            txtiduser.ReadOnly = true;
            txtghichu.ReadOnly = false;
            slulink.ReadOnly = false;
            tr.ReadOnly = false;
            fl.ReadOnly = false;
        }

        private void layttlblid(string id)
        {
            try
            {
                var lst = (from a in new KetNoiDBDataContext().accounts select a).Single(t => t.id == id);
                lbluser.Text = lst.name;
            }
            catch (Exception ex)
            {
                lbluser.Text = "";
            }
        }
      

        private void txtiduser_EditValueChanged(object sender, EventArgs e)
        {
            layttlblid(txtiduser.Text);
        }
    }
}