using System;
using System.Linq;
using System.Windows.Forms;
using BUS;
using ControlLocalizer;
using DAL;
using DevExpress.Data;
using DevExpress.XtraBars;
using DevExpress.XtraEditors;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Base;
using DevExpress.XtraGrid.Views.Grid;
using Lotus;

namespace GUI
{
    public partial class f_thanhtoan_cdt : Form
    {
        private KetNoiDBDataContext db = new KetNoiDBDataContext();
        private t_hopdong_cdt hd = new t_hopdong_cdt();
        private readonly t_history hs = new t_history();
        t_todatatable _tTodatatable = new t_todatatable();

        public f_thanhtoan_cdt()
        {
            InitializeComponent();

            txttygia.ReadOnly = true;

            txtiddt.Properties.DataSource = new KetNoiDBDataContext().doituongs;
            txttiente.Properties.DataSource = new KetNoiDBDataContext().tientes;
            slkloaihd.DataSource = new KetNoiDBDataContext().loaihds;
            WindowState = FormWindowState.Maximized;

            //trans
            if (Biencucbo.ngonngu.ToString() == "Vietnam")
            {
                coldiengiai.Summary.AddRange(new GridSummaryItem[]
                {
                    new GridColumnSummaryItem(SummaryItemType.Sum, "diengiai", "Tổng cộng:")
                });
                gridColumn1.Summary.AddRange(new GridSummaryItem[]
                {
                    new GridColumnSummaryItem(SummaryItemType.Sum, "diengiai", "Tổng cộng:")
                });
            }
            else //lao
            {
                coldiengiai.Summary.AddRange(new GridSummaryItem[]
                {
                    new GridColumnSummaryItem(SummaryItemType.Sum, "diengiai", "ລວມທັງໝົດ:")
                });
                gridColumn1.Summary.AddRange(new GridSummaryItem[]
                {
                    new GridColumnSummaryItem(SummaryItemType.Sum, "diengiai", "ລວມທັງໝົດ:")
                });
            }


            // This line of code is generated by Data Source Configuration Wizard
            slklhd.Properties.DataSource = new KetNoiDBDataContext().cloaihds;
        }

        // phân quyền 
        protected override void OnActivated(EventArgs e)
        {
            base.OnActivated(e);
            var q = Biencucbo.QuyenDangChon;
            if (q == null) return;

            if ((bool) q.Sua)
            {
                btnsua.Visibility = BarItemVisibility.Always;
            }
            else
            {
                btnsua.Visibility = BarItemVisibility.Never;
            }
        }

        //load
        public void load()
        {
            db = new KetNoiDBDataContext();
            txtdv.ReadOnly = true;
            txtid.ReadOnly = true;
            txthanmuctt.ReadOnly = true;
            txtdmcongno.ReadOnly = true;
            txtdiachi.ReadOnly = true;
            txtidnv.ReadOnly = true;
            txtphongban.ReadOnly = true;

            // Enable
            txtghichu.ReadOnly = true;
            txtnoidung.ReadOnly = true;
            slklhd.ReadOnly = true;
            txttiente.ReadOnly = true;
            txtsohd.ReadOnly = true;
            txthanmuctt.ReadOnly = true;
            txtdmcongno.ReadOnly = true;
            txtpt.ReadOnly = true;

            txtNgaylap.ReadOnly = true;
            txtngaybd.ReadOnly = true;
            txtngaykt.ReadOnly = true;
            txtiddt.ReadOnly = true;
            gridView1.OptionsBehavior.Editable = false;
            btnLuu.Enabled = false;
            btnload.Enabled = false;
            btnsua.Enabled = true;

            try
            {
                var lst1 =
                    (from b in db.hopdong_cdts where b.iddv == Biencucbo.donvi select b).FirstOrDefault(
                        t => t.id == Biencucbo.hopdong);
                if (lst1 == null) return;
                gcchitiet.DataSource = lst1.thanhtoan_cdts;

                txtid.Text = lst1.id;
                txtidnv.Text = lst1.idnv;
                txtdv.Text = lst1.iddv;
                txtNgaylap.DateTime = DateTime.Parse(lst1.ngayky.ToString());
                txtngaybd.DateTime = DateTime.Parse(lst1.ngaybd.ToString());
                txtngaykt.DateTime = DateTime.Parse(lst1.ngaykt.ToString());
                txtiddt.Text = lst1.iddt;
                txtgt.Text = Biencucbo.tt_tp.ToString();
                try
                {
                    var lst2 = (from a in db.doituongs select a).Single(t => t.id == txtiddt.Text);
                    lbltendt.Text = lst2.ten;
                    txtdiachi.Text = lst2.diachi;
                }
                catch (Exception)
                {
                }
                txtghichu.Text = lst1.ghichu;
                txtnoidung.Text = lst1.noidunghd;
                slklhd.Text = lst1.loaihd;
                try
                {
                    var lst = (from a in db.cloaihds select a).Single(t => t.id == slklhd.Text);
                    lbllhd.Text = lst.loai;
                }
                catch
                {
                }
                txttiente.Text = lst1.tiente;
                txttygia.Text = lst1.tygia.ToString();
                txtsohd.Text = lst1.sohd;
                txtdmcongno.Text = lst1.dinhmuccn.ToString();
                txthanmuctt.Text = lst1.hanmuctt.ToString();
                txt1.Text = lst1.so.ToString();
                txtpt.Text = lst1.phuongthuctt;
                txtcl.Text =
                    (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                Biencucbo.hdttoan = 2;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
        }

        //Lưu

        public void luu()
        {
            try
            {
                LuuPhieu();


                gridView1.OptionsBehavior.Editable = false;
                Biencucbo.hdttoan = 2;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
        }


        private void btnLuu_ItemClick(object sender, ItemClickEventArgs e)
        {
            gridView1.PostEditor();
            luu();
            hs.add(txtid.Text, "Điều chỉnh thanh toán hợp đồng");
            gridView1.PostEditor();


            gridView1.PostEditor();
            var test = double.Parse(coltt.SummaryItem.SummaryValue.ToString());
            txtcl.Text = (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();

            btnsua.Enabled = true;
            btnLuu.Enabled = false;
            btnreload.Enabled = false;
            gridView1.OptionsBehavior.Editable = false;
        }

        private bool LuuPhieu()
        {
            layoutControl1.Validate();
            gridView1.CloseEditor();
            gridView1.UpdateCurrentRow();

            try
            {
                db.hopdongct_cdts.Context.SubmitChanges();
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message);
                return false;
            }

            return true;
        }

        private void btnsua_ItemClick(object sender, ItemClickEventArgs e)
        {
            gridView1.OptionsBehavior.Editable = true;
            Biencucbo.hdttoan = 1;
            btnsua.Enabled = false;
            btnLuu.Enabled = true;
            btnload.Enabled = true;

            ////load
        }

        private void btnin_ItemClick(object sender, ItemClickEventArgs e)
        {
            //var lst = (from a in db.r_pxuats where a.id == txtid.Text select a);
            //r_pxuat xtra = new r_pxuat();

            //xtra.DataSource = _tTodatatable.addlst(lst.ToList());
            //xtra.ShowPreviewDialog();
        }

        private void btnload_ItemClick(object sender, ItemClickEventArgs e)
        {
            load();
        }


        private void gridView1_CellValueChanged(object sender, CellValueChangedEventArgs e)
        {
            gridView1.PostEditor();

            if (e.Column.FieldName == "giatritt")
            {
                try

                {
                    gridView1.PostEditor();
                    var test = double.Parse(coltt.SummaryItem.SummaryValue.ToString());
                    txtcl.Text =
                        (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                }
                catch (Exception)
                {
                }
            }
        }

        private void gridView1_KeyDown(object sender, KeyEventArgs e)
        {
            if (Biencucbo.hdttoan != 2)
            {
                if (e.KeyCode == Keys.Insert)
                {
                    gridView1.AddNewRow();
                }
                else if (e.KeyCode == Keys.Delete)
                {
                    if (Biencucbo.hdttoan == 1)
                    {
                        try
                        {
                            var ct =
                                (from c in db.thanhtoan_cdts select c).Single(
                                    x => x.id == gridView1.GetFocusedRowCellValue("id").ToString());
                            db.thanhtoan_cdts.DeleteOnSubmit(ct);
                            gridView1.PostEditor();
                        }
                        catch
                        {
                        }
                    }
                    gridView1.DeleteRow(gridView1.FocusedRowHandle);

                    txtcl.Text =
                        (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                }
            }
        }

        private void txtiddt_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
                var lst = (from a in db.doituongs select a).Single(t => t.id == txtiddt.Text);
                lbltendt.Text = lst.ten;
                txtdiachi.Text = lst.diachi;
            }
            catch (Exception)
            {
                lbltendt.Text = "";
            }
        }


        //add new row
        private void gridView1_InitNewRow(object sender, InitNewRowEventArgs e)
        {
            int i = 0, k = 0;
            string a;

            k = gridView1.DataRowCount;
            a = txtid.Text + k;

            for (i = 0; i <= gridView1.DataRowCount - 1;)
            {
                if (a == gridView1.GetRowCellValue(i, "id").ToString())
                {
                    k = k + 1;
                    a = txtid.Text + k;
                    i = 0;
                }
                else
                {
                    i++;
                }
            }


            gridView1.SetFocusedRowCellValue("id", a);
            gridView1.SetFocusedRowCellValue("idhd_cdt", Biencucbo.hopdong);
            gridView1.SetFocusedRowCellValue("diengiai", "");
            gridView1.SetFocusedRowCellValue("ghichu", "");
            gridView1.SetFocusedRowCellValue("giatritt", 0);
            gridView1.SetFocusedRowCellValue("giatriqt", 0);
            try
            {
                var lst2 =
                    int.Parse(
                        (from b in db.thanhtoan_cdts where b.idhd_cdt == Biencucbo.hopdong select b).Max(t => t.lan)
                            .ToString());
                gridView1.SetFocusedRowCellValue("lan", lst2 + 1);
            }
            catch
            {
                gridView1.SetFocusedRowCellValue("lan", 1);
            }
            gridView1.SetFocusedRowCellValue("ngaytt",
                new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day));
            gridView1.SetFocusedRowCellValue("ngayxuly",
                new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day));
        }

        private void f_hd_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (Biencucbo.hdttoan != 2)
            {
                var a =
                    MsgBox.ShowYesNoCancelDialog("Bạn Chưa lưu phiếu này - Bạn có muốn lưu lại trước khi đóng không?");
                if (a == DialogResult.Yes)
                {
                    luu();
                }
                else if (a == DialogResult.Cancel) e.Cancel = true;
            }
        }


        private void f_hd_Load(object sender, EventArgs e)
        {
            LanguageHelper.Translate(this);
            LanguageHelper.Translate(barManager1);
            Text = LanguageHelper.TranslateMsgString("." + Name + "_title", "Thanh Toán Hợp Đồng Chủ Đầu Tư");

            changeFont.Translate(this);
            changeFont.Translate(barManager1);

            load();
        }


        private void txttiente_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
                var lst = (from a in db.tientes select a).FirstOrDefault(t => t.tiente1 == txttiente.Text);
                txttygia.Text = lst.tygia.ToString();
            }
            catch
            {
            }
        }


        private void gridView1_Click(object sender, EventArgs e)
        {
            gridView1.PostEditor();
            var test = double.Parse(coltt.SummaryItem.SummaryValue.ToString());
            txtcl.Text = (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
        }

        private void slklhd_Popup(object sender, EventArgs e)
        {
        }

        private void btnduyet_ItemClick(object sender, ItemClickEventArgs e)
        {
            //if (Biencucbo.hdttoan != 2)
            //    return;
            //Biencucbo.ma = txtid.Text;
            //f_duyettt frm = new f_duyettt();
            //frm.ShowDialog();
        }

        private void btntheodoitt_ItemClick(object sender, ItemClickEventArgs e)
        {
            //if (Biencucbo.hdttoan == 0 || Biencucbo.hdttoan == 1 )
            //    return;

            //Biencucbo.theodoitt = double.Parse(gridView1.GetFocusedRowCellValue("giatritt").ToString());
            //Biencucbo.ma = gridView1.GetFocusedRowCellValue("id").ToString();
            //f_theodoitt frm = new f_theodoitt();
            //frm.ShowDialog();
        }
    }
}