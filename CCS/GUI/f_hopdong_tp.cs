using System;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using BUS;
using ControlLocalizer;
using DAL;
using DevExpress.Utils.Win;
using DevExpress.XtraBars;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Controls;
using DevExpress.XtraGrid.Views.Base;
using DevExpress.XtraGrid.Views.Grid;
using GUI.Properties;
using Lotus;

namespace GUI
{
    public partial class f_hopdong_tp : Form
    {
        private KetNoiDBDataContext db = new KetNoiDBDataContext();
        private readonly t_hopdong hd = new t_hopdong();
        private string _mact = "";
        private string _ma = "";

        public f_hopdong_tp()
        {
            InitializeComponent();
            // tinh so luong ton san pham
            //txttygia.ReadOnly = true;


            //btncongviec.DataSource = new DAL.KetNoiDBDataContext().congviecs;
            txtiddt.Properties.DataSource = new KetNoiDBDataContext().doituongs;
            txttiente.Properties.DataSource = new KetNoiDBDataContext().tientes;
            slkloaihd.DataSource = new KetNoiDBDataContext().loaihds;
            WindowState = FormWindowState.Maximized;

            var lst = (from a in db.vanbandens
                join d in db.donvis on a.iddv equals d.id
                where a.iddv == Biencucbo.donvi
                select new
                {
                    a.id,
                    a.ngaynhan,
                    a.sovb,
                    a.noidung
                }).ToList();
            slulink.Properties.DataSource = _tTodatatable.addlst(lst.ToList());

            //lay quyen
            var quyen1 =
                db.PhanQuyen2s.FirstOrDefault(
                    p => p.TaiKhoan == Biencucbo.phongban && p.ChucNang == "HopDong_TP_TheoDoiThanhToan");
            if (quyen1 == null)
            {
                quyen1 = new PhanQuyen2();
                quyen1.TaiKhoan = Biencucbo.phongban;
                quyen1.ChucNang = "HopDong_TP_TheoDoiThanhToan";

                quyen1.Xem = quyen1.Them = quyen1.Sua = quyen1.Xoa = false;

                db.PhanQuyen2s.InsertOnSubmit(quyen1);
                db.SubmitChanges();
            }

            btnthanhtoan.Enabled = (bool) quyen1.Xem;
            // This line of code is generated by Data Source Configuration Wizard
            slklhd.Properties.DataSource = new KetNoiDBDataContext().cloaihds;
        }

        private string LayMaTim(donvi d)
        {
            var s = "." + d.id + "." + d.iddv + ".";
            var find = db.donvis.FirstOrDefault(t => t.id == d.iddv);
            if (find != null)
            {
                var iddv = find.iddv;
                if (d.id != find.iddv)
                {
                    if (!s.Contains(iddv))
                        s += iddv + ".";
                }
                while (iddv != find.id)
                {
                    if (!s.Contains(find.id))
                        s += find.id + ".";
                    find = db.donvis.FirstOrDefault(t => t.id == find.iddv);
                }
            }
            return s;
        }

        //phân quyền
        protected override void OnActivated(EventArgs e)
        {
            base.OnActivated(e);
            var q = Biencucbo.QuyenDangChon;
            if (q == null) return;

            if ((bool) q.Them)
            {
                btnnew.Visibility = BarItemVisibility.Always;
            }
            else
            {
                btnnew.Visibility = BarItemVisibility.Never;
            }
            if ((bool) q.Sua)
            {
                btnsua.Visibility = BarItemVisibility.Always;
            }
            else
            {
                btnsua.Visibility = BarItemVisibility.Never;
            }
            if ((bool) q.Xoa)
            {
                btnxoa.Visibility = BarItemVisibility.Always;
            }
            else
            {
                btnxoa.Visibility = BarItemVisibility.Never;
            }
        }

        //load
        private void layttnhanvien(string txt)
        {
            try
            {
                var lst = (from a in db.accounts select a).Single(t => t.id == txt);
                lbltennv.Text = lst.name;
                txtphongban.Text = lst.phongban;
            }
            catch (Exception ex)
            {
                lbltennv.Text = "";
                txtphongban.Text = "";
            }
        }
        public void load()
        {
            db = new KetNoiDBDataContext();
            Biencucbo.hdhdtp = 2;
            txt1.Enabled = false;

            btnLuu.Enabled = false;
            btnsua.Enabled = true;
            btnxoa.Enabled = true;
            btnreload.Enabled = false;

            txtdv.ReadOnly = true;
            txtid.ReadOnly = true;
            txthanmuctt.ReadOnly = true;
            txtdmcongno.ReadOnly = true;
            txtdiachi.ReadOnly = true;
            txtidnv.ReadOnly = true;
            txtnoidung.ReadOnly = true;
            slklhd.ReadOnly = true;
            txtphongban.ReadOnly = true;

            // Enable
            txtghichu.ReadOnly = true;
            txtnoidung.ReadOnly = true;
            slklhd.ReadOnly = true;
            txttiente.ReadOnly = true;
            txttygia.ReadOnly = true;
            txtsohd.ReadOnly = true;
            txthanmuctt.ReadOnly = true;
            txtdmcongno.ReadOnly = true;
            txtpt.Enabled = false;

            txtNgaylap.ReadOnly = true;
            txtngaybd.ReadOnly = true;
            txtngaykt.ReadOnly = true;
            txtiddt.ReadOnly = true;
            slulink.ReadOnly = true;
            gridView1.OptionsBehavior.Editable = false;

            try
            {
                //var lst = (from a in db.hopdong_tps where a.iddv == Biencucbo.donvi && a.idct == _mact select a.so).Max();
                var lst1 =
                    (from b in db.hopdong_tps where b.iddv == Biencucbo.donvi select b).Single(t => t.id == _ma);
                if (lst1 == null) return;

                

                txtid.Text = lst1.id;
                txtidnv.Text = lst1.idnv;
                layttnhanvien(lst1.idnv);
                txtdv.Text = lst1.iddv;
                txtnoidung.Text = lst1.noidunghd;
                try
                {
                    var lst3 = (from a in db.cloaihds select a).Single(t => t.id == slklhd.Text);
                    lblloaihd.Text = lst3.loai;
                }
                catch
                {
                    lblloaihd.Text = "";
                }
                txtNgaylap.DateTime = DateTime.Parse(lst1.ngayky.ToString());
                txtngaybd.DateTime = DateTime.Parse(lst1.ngaybd.ToString());
                txtngaykt.DateTime = DateTime.Parse(lst1.ngaykt.ToString());
                txtiddt.Text = lst1.iddt;
                slulink.Text = lst1.link;
                try
                {
                    var lst2 = (from a in db.doituongs select a).Single(t => t.id == txtiddt.Text);
                    lbltendt.Text = lst2.ten;
                    txtdiachi.Text = lst2.diachi;
                }
                catch (Exception)
                {
                }
                txtghichu.Text = lst1.ghichu;
                txttiente.Text = lst1.tiente;
                txttygia.Text = lst1.tygia.ToString();
                txtsohd.Text = lst1.sohd;
                txtdmcongno.Text = lst1.dinhmuccn.ToString();
                txthanmuctt.Text = lst1.hanmuctt.ToString();
                txt1.Text = lst1.so.ToString();
                txtpt.Text = lst1.phuongthuctt;
                gcchitiet.DataSource = lst1.hopdongct_tps;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
        }


        //Mở
        private void btnmo_ItemClick(object sender, ItemClickEventArgs e)
        {
            //db = new KetNoiDBDataContext();
            //f_dsHopDong frm = new f_dsHopDong();
            //frm.ShowDialog();
        }

        //Add new
        private void them()
        {
            Biencucbo.hdhdtp = 0;
            txtid.DataBindings.Clear();
            txtid.Text = "YYYYY";

            gcchitiet.DataSource = new KetNoiDBDataContext().View_hdtps; //.r_hopdongs;
            for (var i = 0; i <= gridView1.RowCount - 1; i++)
            {
                gridView1.DeleteRow(i);
            }
            gridView1.AddNewRow();

            txtdv.Text = Biencucbo.donvi;
            txtNgaylap.DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
            txtngaybd.DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
            txtngaykt.DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
            txtphongban.Text = Biencucbo.phongban;
            txtidnv.Text = Biencucbo.idnv.Trim();
            
            lbltennv.Text = Biencucbo.ten;

            txtiddt.Text = "";
            slulink.Text = "";
            lbltendt.Text = "";
            txtnoidung.Text = "";
            slklhd.Text = "";
            lblloaihd.Text = "";
            txtpt.Text = "Tiền Mặt";
            txtghichu.Text = "";
            txttiente.Text = "KIP";
            txttygia.Text = "1";
            txtsohd.Text = "";
            txtdmcongno.Text = "0";
            txthanmuctt.Text = "0";


            //btn
            btnnew.Enabled = false;
            btnLuu.Enabled = true;
            btnsua.Enabled = false;
            btnxoa.Enabled = false;
            btnreload.Enabled = false;

            //enabled
            txtghichu.ReadOnly = false;
            txtnoidung.ReadOnly = false;
            slklhd.ReadOnly = false;
            txttiente.ReadOnly = false;
            txttygia.ReadOnly = false;
            txtsohd.ReadOnly = false;
            txthanmuctt.ReadOnly = false;
            txtdmcongno.ReadOnly = false;
            txtNgaylap.ReadOnly = false;
            txtngaybd.ReadOnly = false;
            txtngaykt.ReadOnly = false;
            txtpt.Enabled = true;
            txtiddt.ReadOnly = false;
            slulink.ReadOnly = false;
            gridView1.OptionsBehavior.Editable = true;
        }
        private void btnnew_ItemClick(object sender, ItemClickEventArgs e)
        {
            them();
        }


        //Lưu

        public void luu()
        {
            var hs = new t_history();
            var td = new t_tudong();
            if (txthanmuctt.Text == "")
                txthanmuctt.Text = "0";
            if (txtdmcongno.Text == "")
                txtdmcongno.Text = "0";

            gridView1.PostEditor();

            gridView1.UpdateCurrentRow();


            if (txtNgaylap.Text == "" || txtsohd.Text == "" || txtngaybd.Text == "" || txtngaykt.Text == "" ||
                txtpt.Text == "" || txtiddt.Text == "")
            {
                MsgBox.ShowWarningDialog("Thông tin chưa đầy đủ - Vui lòng kiểm tra lại!");
            }
            else
            {
                if (Biencucbo.hdhdtp == 0)
                {
                    db = new KetNoiDBDataContext();
                    try
                    {
                        var check = "HDTP" + Biencucbo.donvi.Trim();
                        var lst1 = (from s in db.tudongs where s.maphieu == check select new {s.so}).ToList();

                        if (lst1.Count == 0)
                        {
                            int so;

                            so = 2;
                            td.themtudong(check, so);
                            txtid.Text = check + "_000001";
                            txt1.Text = "1";
                        }
                        else
                        {
                            int k;
                            txt1.DataBindings.Clear();
                            txt1.DataBindings.Add("text", lst1, "so");

                            k = 0;
                            k = Convert.ToInt32(txt1.Text);
                            var so0 = "";
                            if (k < 10)
                            {
                                so0 = "00000";
                            }
                            else if (k >= 10 & k < 100)
                            {
                                so0 = "0000";
                            }
                            else if (k >= 100 & k < 1000)
                            {
                                so0 = "000";
                            }
                            else if (k >= 1000 & k < 10000)
                            {
                                so0 = "00";
                            }
                            else if (k >= 10000 & k < 100000)
                            {
                                so0 = "0";
                            }
                            else if (k >= 100000)
                            {
                                so0 = "";
                            }
                            txtid.Text = check + "_" + so0 + k;

                            k = k + 1;

                            td.suatudong(check, k);
                        }

                        hd.moihd(txtid.Text.Trim(), txtNgaylap.DateTime, txtngaybd.DateTime, txtngaykt.DateTime,
                            txtiddt.Text, txtidnv.Text, txtdv.Text, txtpt.Text, txtghichu.Text,
                            Convert.ToInt32(txt1.Text), double.Parse(txthanmuctt.Text), double.Parse(txtdmcongno.Text),
                            txtsohd.Text, txttiente.Text, double.Parse(txttygia.Text), _mact, txtnoidung.Text,
                            slklhd.Text, slulink.Text);

                        for (var i = 0; i <= gridView1.RowCount - 1; i++)
                        {
                            gridView1.SetRowCellValue(i, "id", txtid.Text + i);
                            gridView1.SetRowCellValue(i, "idhd_tp", txtid.Text);

                            hd.moihdct(gridView1.GetRowCellValue(i, "id").ToString(),
                                gridView1.GetRowCellValue(i, "idhd_tp").ToString(),
                                gridView1.GetRowCellValue(i, "diengiai").ToString(),
                                double.Parse(gridView1.GetRowCellValue(i, "nguyente").ToString()),
                                double.Parse(gridView1.GetRowCellValue(i, "thanhtien").ToString()),
                                gridView1.GetRowCellValue(i, "loai").ToString());
                        }

                        //btn
                        btnnew.Enabled = true;
                        btnLuu.Enabled = false;
                        btnsua.Enabled = true;
                        btnxoa.Enabled = true;
                        btnreload.Enabled = false;

                        //enabled
                        txtghichu.ReadOnly = true;
                        txtnoidung.ReadOnly = true;
                        slklhd.ReadOnly = true;
                        txttiente.ReadOnly = true;
                        txttygia.ReadOnly = true;
                        txtsohd.ReadOnly = true;
                        txthanmuctt.ReadOnly = true;
                        txtdmcongno.ReadOnly = true;
                        txtNgaylap.ReadOnly = true;
                        txtngaybd.ReadOnly = true;
                        txtngaykt.ReadOnly = true;
                        txtpt.Enabled = false;
                        txtiddt.ReadOnly = true;
                        slulink.ReadOnly = true;

                        gridView1.OptionsBehavior.Editable = false;
                        Biencucbo.hdhdtp = 2;

                        // History 
                        hs.add(txtid.Text, "Thêm mới Hợp đồng");
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.Message);
                    }
                }


                else //Sua HD
                {
                    try
                    {
                        hd.suahd(txtid.Text.Trim(), txtNgaylap.DateTime, txtngaybd.DateTime, txtngaykt.DateTime,
                            txtiddt.Text, txtidnv.Text, Biencucbo.donvi, txtpt.Text, txtghichu.Text,
                            Convert.ToInt32(txt1.Text), double.Parse(txthanmuctt.Text), double.Parse(txtdmcongno.Text),
                            txtsohd.Text, txttiente.Text, double.Parse(txttygia.Text), txtnoidung.Text, slklhd.Text,
                            slulink.Text);
                        //sua ct
                        LuuPhieu();

                        ////btn
                        btnnew.Enabled = true;
                        btnLuu.Enabled = false;
                        btnsua.Enabled = true;
                        btnxoa.Enabled = true;
                        btnreload.Enabled = false;

                        //enabled
                        txtghichu.ReadOnly = true;
                        txtnoidung.ReadOnly = true;
                        slklhd.ReadOnly = true;
                        txttiente.ReadOnly = true;
                        txttygia.ReadOnly = true;
                        txtsohd.ReadOnly = true;
                        txthanmuctt.ReadOnly = true;
                        txtdmcongno.ReadOnly = true;
                        txtNgaylap.ReadOnly = true;
                        txtngaybd.ReadOnly = true;
                        txtngaykt.ReadOnly = true;
                        txtpt.Enabled = false;
                        txtiddt.ReadOnly = true;
                        slulink.ReadOnly = false;

                        gridView1.OptionsBehavior.Editable = false;
                        Biencucbo.hdhdtp = 2;


                        hs.add(txtid.Text, "Sửa Hợp đồng");
                    }
                    catch (Exception ex)
                    {
                        MessageBox.Show(ex.ToString());
                    }
                }
            }
        }

        private void btnLuu_ItemClick(object sender, ItemClickEventArgs e)
        {
            
            luu();
        }

        private bool LuuPhieu()
        {
            layoutControl1.Validate();
            gridView1.CloseEditor();
            gridView1.PostEditor();
            gridView1.UpdateCurrentRow();

            try
            {
                var c1 = db.hopdongct_tps.Context.GetChangeSet();
                db.hopdongct_tps.Context.SubmitChanges();
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message);
                return false;
            }

            return true;
        }

        private void sua()
        {
            if (Biencucbo.idnv != txtidnv.Text)
            {
                XtraMessageBox.Show("Bạn không có quyền chỉnh sửa phiếu này", "THÔNG BÁO");
                return;
            }
            //else if (txtidnv.Text != Biencucbo.idnv)
            //{
            //    XtraMessageBox.Show("Bạn không có quyền chỉnh sửa phiếu này", "THÔNG BÁO");
            //}
            if (txtid.Text == "") return;

            try
            {
                var lst = (from pn in db.hopdong_tps select pn).Single(x => x.id == txtid.Text);
                if (lst == null) return;
                gcchitiet.DataSource = lst.hopdongct_tps;
                //enabled
                txtghichu.ReadOnly = false;
                txtnoidung.ReadOnly = false;
                slklhd.ReadOnly = false;
                txttiente.ReadOnly = false;
                txttygia.ReadOnly = false;
                txtsohd.ReadOnly = false;
                txthanmuctt.ReadOnly = false;
                txtdmcongno.ReadOnly = false;
                txtNgaylap.ReadOnly = false;
                txtngaybd.ReadOnly = false;
                txtngaykt.ReadOnly = false;
                txtpt.Enabled = true;
                txtiddt.ReadOnly = false;
                slulink.ReadOnly = false;

                gridView1.OptionsBehavior.Editable = true;
                Biencucbo.hdhdtp = 1;

                txtghichu.Focus();

                // btn
                btnsua.Enabled = false;
                btnLuu.Enabled = true;
                btnnew.Enabled = false;
                btnxoa.Enabled = false;
                btnreload.Enabled = true;
                
            }
            catch
            {
            }
        }
        private void btnsua_ItemClick(object sender, ItemClickEventArgs e)
        {
            sua();
        }
        private void xoa()
        {
            if (Biencucbo.idnv != txtidnv.Text)
            {
                XtraMessageBox.Show("Bạn không có quyền xóa phiếu này", "THÔNG BÁO");
                return;
            }
            if (txtid.Text == "") return;

            if (
                XtraMessageBox.Show("Bạn có chắc chắn muốn xóa Hợp đồng " + txtid.Text + " không?", "THÔNG BÁO",
                    MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
            {
                var hs = new t_history();

                hs.add(txtid.Text, "Xóa Hợp đồng");

                for (var i = gridView1.DataRowCount - 1; i >= 0; i--)
                {
                    hd.xoact(gridView1.GetRowCellValue(i, "id").ToString());
                    gridView1.DeleteRow(i);
                }

                hd.xoahd(txtid.Text);

                //btn
                btnnew.Enabled = true;
                btnLuu.Enabled = false;
                btnsua.Enabled = true;
                btnxoa.Enabled = true;
                btnreload.Enabled = false;

                //enabled
                txtghichu.ReadOnly = true;
                txtnoidung.ReadOnly = true;
                slklhd.ReadOnly = true;
                txttiente.ReadOnly = true;
                txttygia.ReadOnly = true;
                txtsohd.ReadOnly = true;
                txthanmuctt.ReadOnly = true;
                txtdmcongno.ReadOnly = true;
                txtNgaylap.ReadOnly = true;
                txtngaybd.ReadOnly = true;
                txtngaykt.ReadOnly = true;
                txtpt.Enabled = false;
                txtiddt.ReadOnly = true;
                slulink.ReadOnly = true;

                gridView1.OptionsBehavior.Editable = false;

                txtdv.Text = "";
                txtid.Text = "";
                txtidnv.Text = "";
                lbltennv.Text = "";
                txtnoidung.Text = "";
                slklhd.Text = "";
                lblloaihd.Text = "";
                txtdv.Text = "";
                txtNgaylap.Text = "";
                txtngaybd.Text = "";
                txtngaykt.Text = "";
                txtpt.Text = "";
                txtiddt.Text = "";
                slulink.Text = "";
                txtghichu.Text = "";
                txttiente.Text = "KIP";
                txttygia.Text = "1";
                txtsohd.Text = "";
                txtdmcongno.Text = "";
                txthanmuctt.Text = "";

                txt1.Text = "";

                lbltendt.Text = "";
                lbltennv.Text = "";
            }
        }
        private void btnxoa_ItemClick(object sender, ItemClickEventArgs e)
        {
            xoa();
        }

        private void btnin_ItemClick(object sender, ItemClickEventArgs e)
        {
            //var lst = (from a in db.r_pxuats where a.id == txtid.Text select a);
            //r_pxuat xtra = new r_pxuat();

            //xtra.DataSource = _tTodatatable.addlst(lst.ToList());
            //xtra.ShowPreviewDialog();
        }
        private void reload()
        {
            if (Biencucbo.hdhdtp == 1)
            {
                db = new KetNoiDBDataContext();

                var lst = (from pn in db.hopdong_tps select pn).FirstOrDefault(x => x.id == txtid.Text);

                if (lst == null) return;

                gcchitiet.DataSource = lst.hopdongct_tps;

                txtidnv.Text = lst.idnv;
                layttnhanvien(lst.idnv);
                txtnoidung.Text = lst.noidunghd;
                slklhd.Text = lst.loaihd;
                try
                {
                    var lst3 = (from a in db.cloaihds select a).Single(t => t.id == slklhd.Text);
                    lblloaihd.Text = lst3.loai;
                }
                catch
                {
                    lblloaihd.Text = "";
                }
                txtdv.Text = lst.iddv;
                txtNgaylap.DateTime = DateTime.Parse(lst.ngayky.ToString());
                txtngaybd.DateTime = DateTime.Parse(lst.ngaybd.ToString());
                txtngaykt.DateTime = DateTime.Parse(lst.ngaykt.ToString());

                txtiddt.Text = lst.iddt;
                slulink.Text = lst.link;
                txtghichu.Text = lst.ghichu;
                txtnoidung.Text = lst.noidunghd;
                slklhd.Text = lst.loaihd;
                try
                {
                    var lst1 = (from a in db.cloaihds select a).Single(t => t.id == slklhd.Text);
                    lblloaihd.Text = lst1.loai;
                }
                catch
                {
                    lblloaihd.Text = "";
                }
                txttiente.Text = lst.tiente;
                txttygia.Text = lst.tygia.ToString();
                txtsohd.Text = lst.sohd;
                txtdmcongno.Text = lst.dinhmuccn.ToString();
                txthanmuctt.Text = lst.hanmuctt.ToString();
                txtpt.Text = lst.phuongthuctt;
                txt1.Text = lst.so.ToString();

                gcchitiet.DataSource = lst.hopdongct_tps;

                //btn
                btnnew.Enabled = true;
                btnsua.Enabled = true;
                btnLuu.Enabled = false;
                btnxoa.Enabled = true;
                btnreload.Enabled = false;

                gridView1.OptionsBehavior.Editable = false;
            }

            else if (Biencucbo.hdhdtp == 0)
            {
                load();
                btnnew.Enabled = true;
                btnsua.Enabled = true;
                btnLuu.Enabled = false;
                btnxoa.Enabled = true;
                btnreload.Enabled = false;

                gridView1.OptionsBehavior.Editable = false;
            }
            Biencucbo.hdhdtp = 2;
        }
        private void btnload_ItemClick(object sender, ItemClickEventArgs e)
        {
            reload();
        }

        private void gridView1_CellValueChanged(object sender, CellValueChangedEventArgs e)
        {
            gridView1.PostEditor();

            if (e.Column.FieldName == "nguyente")
            {
                try

                {
                    gridView1.SetFocusedRowCellValue("thanhtien",
                        double.Parse(gridView1.GetFocusedRowCellValue("nguyente").ToString())*
                        double.Parse(txttygia.Text));
                }
                catch (Exception)
                {
                }
            }
        }

        private void gridView1_KeyDown(object sender, KeyEventArgs e)
        {
            
        }

        private void txtiddt_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
                var lst = (from a in db.doituongs select a).Single(t => t.id == txtiddt.Text);
                lbltendt.Text = lst.ten;
                txtdiachi.Text = lst.diachi;
            }
            catch (Exception)
            {
                lbltendt.Text = "";
            }
        }


        //add new row
        private void gridView1_InitNewRow(object sender, InitNewRowEventArgs e)
        {
            if (Biencucbo.hdhdtp == 1)
            {
                var ct = gridView1.GetFocusedRow() as hopdongct_tp;
                if (ct == null) return;

                int i = 0, k = 0;
                string a;

                k = gridView1.DataRowCount;
                a = txtid.Text + k;

                for (i = 0; i <= gridView1.DataRowCount - 1;)
                {
                    if (a == gridView1.GetRowCellValue(i, "id").ToString())
                    {
                        k = k + 1;
                        a = txtid.Text + k;
                        i = 0;
                    }
                    else
                    {
                        i++;
                    }
                }

                ct.idhd_tp = txtid.Text;
                ct.diengiai = "";
                ct.thanhtien = 0;
                ct.id = a;
                ct.nguyente = 0;
                ct.loai = "Hợp Đồng";
            }

            else
            {
                gridView1.SetFocusedRowCellValue("diengiai", "");
                gridView1.SetFocusedRowCellValue("loai", "Hợp Đồng");
                gridView1.SetFocusedRowCellValue("nguyente", 0);
            }
        }

        private void f_hd_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (Biencucbo.hdhdtp != 2)
            {
                var a =
                    MsgBox.ShowYesNoCancelDialog(
                        "Hợp đồng này chưa được lưu - Bạn có muốn lưu Hợp đồng này trước khi thoát không?");
                if (a == DialogResult.Yes)
                {
                    luu();
                }
                else if (a == DialogResult.Cancel) e.Cancel = true;
            }
        }

        private void rsearchtiente_EditValueChanged(object sender, EventArgs e)
        {
            //gridView1.PostEditor();
            //try
            //{
            //    var lst = (from a in db.tientes select a).Single(t => t.tiente1 == gridView1.GetFocusedRowCellValue("tiente").ToString());
            //    if (lst == null) return;
            //    gridView1.SetFocusedRowCellValue("tygia", lst.tygia);
            //}
            //catch
            //{

            //}
        }


        private void f_hd_Load(object sender, EventArgs e)
        {
            LanguageHelper.Translate(this);
            LanguageHelper.Translate(barManager1);
            Text =  "Hợp Đồng Thầu phụ - Công trình: " + (from a in db.congtrinhs select a).Single(t=>t.id == Biencucbo.mamo).tencongtrinh;
            _mact = Biencucbo.mamo;
            _ma = Biencucbo.ma;
            changeFont.Translate(this);
            changeFont.Translate(barManager1);

            btnLuu.Enabled = false;
            btnsua.Enabled = true;
            btnxoa.Enabled = true;
            btnreload.Enabled = false;

            txtdv.ReadOnly = true;
            txtid.ReadOnly = true;
            txthanmuctt.ReadOnly = true;
            txtdmcongno.ReadOnly = true;
            txtdiachi.ReadOnly = true;
            txtidnv.ReadOnly = true;
            txtnoidung.ReadOnly = true;
            slklhd.ReadOnly = true;
            txtphongban.ReadOnly = true;

            // Enable
            txtghichu.ReadOnly = true;
            txtnoidung.ReadOnly = true;
            slklhd.ReadOnly = true;
            txttiente.ReadOnly = true;
            txttygia.ReadOnly = true;
            txtsohd.ReadOnly = true;
            txthanmuctt.ReadOnly = true;
            txtdmcongno.ReadOnly = true;
            txtpt.Enabled = false;

            txtNgaylap.ReadOnly = true;
            txtngaybd.ReadOnly = true;
            txtngaykt.ReadOnly = true;
            txtiddt.ReadOnly = true;
            slulink.ReadOnly = true;
            gridView1.OptionsBehavior.Editable = false;

            if (Biencucbo.getID == 1)
            {
                //load hop dong
                try
                {
                    
                    Biencucbo.hdhdtp = 2;
                    var lst = (from hd in db.hopdong_tps select new {a = hd}).Single(x => x.a.id == _ma);

                    if (lst == null) return;

                    txtid.Text = lst.a.id;
                    txtidnv.Text = lst.a.idnv;
                    layttnhanvien(lst.a.idnv);
                    txtnoidung.Text = lst.a.noidunghd;
                    slklhd.Text = lst.a.loaihd;
                    try
                    {
                        var lst3 = (from a in db.cloaihds select a).Single(t => t.id == slklhd.Text);
                        lblloaihd.Text = lst3.loai;
                    }
                    catch
                    {
                        lblloaihd.Text = "";
                    }
                    txtdv.Text = lst.a.iddv;
                    txtNgaylap.DateTime = DateTime.Parse(lst.a.ngayky.ToString());
                    txtngaybd.DateTime = DateTime.Parse(lst.a.ngaybd.ToString());
                    txtngaykt.DateTime = DateTime.Parse(lst.a.ngayky.ToString());
                    txtiddt.Text = lst.a.iddt;
                    slulink.Text = lst.a.link;
                    txtpt.Text = lst.a.phuongthuctt;
                    txtidnv.Text = lst.a.idnv;
                    try
                    {
                        var lst1 = (from a in db.accounts select a).Single(t => t.id == txtidnv.Text);
                        lbltennv.Text = lst1.name;
                        txtphongban.Text = lst1.phongban;
                    }
                    catch
                    {
                    }
                    txtghichu.Text = lst.a.ghichu;
                    txttiente.Text = lst.a.tiente;
                    txttygia.Text = lst.a.tygia.ToString();
                    txtsohd.Text = lst.a.sohd;
                    txtdmcongno.Text = lst.a.dinhmuccn.ToString();
                    txthanmuctt.Text = lst.a.hanmuctt.ToString();
                    txt1.Text = lst.a.so.ToString();
                    gcchitiet.DataSource = lst.a.hopdongct_tps;

                    //btn
                    btnnew.Enabled = true;
                    btnsua.Enabled = true;
                    btnLuu.Enabled = false;
                    btnxoa.Enabled = true;
                    btnreload.Enabled = false;
                }
                catch
                {
                }
            }
            else
            {
                try
                {
                    Biencucbo.hdhdtp = 0;
                    txtid.DataBindings.Clear();
                    txtid.Text = "YYYYY";

                    gcchitiet.DataSource = new KetNoiDBDataContext().View_hdtps; //.r_hopdongs;
                    for (var i = 0; i <= gridView1.RowCount - 1; i++)
                    {
                        gridView1.DeleteRow(i);
                    }
                    gridView1.AddNewRow();

                    txtdv.Text = Biencucbo.donvi;
                    txtNgaylap.DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
                    txtngaybd.DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
                    txtngaykt.DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
                    txtphongban.Text = Biencucbo.phongban;
                    txtidnv.Text = Biencucbo.idnv.Trim();
                    lbltennv.Text = Biencucbo.ten;

                    txtiddt.Text = "";
                    slulink.Text = "";
                    lbltendt.Text = "";
                    txtnoidung.Text = "";
                    slklhd.Text = "";
                    lblloaihd.Text = "";
                    txtpt.Text = "Tiền Mặt";
                    txtghichu.Text = "";
                    txttiente.Text = "KIP";
                    txttygia.Text = "1";
                    txtsohd.Text = "";
                    txtdmcongno.Text = "0";
                    txthanmuctt.Text = "0";


                    //btn
                    btnnew.Enabled = false;
                    btnLuu.Enabled = true;
                    btnsua.Enabled = false;
                    btnxoa.Enabled = false;
                    btnreload.Enabled = false;

                    //enabled
                    txtghichu.ReadOnly = false;
                    txtnoidung.ReadOnly = false;
                    slklhd.ReadOnly = false;
                    txttiente.ReadOnly = false;
                    txttygia.ReadOnly = false;
                    txtsohd.ReadOnly = false;
                    txthanmuctt.ReadOnly = false;
                    txtdmcongno.ReadOnly = false;
                    txtNgaylap.ReadOnly = false;
                    txtngaybd.ReadOnly = false;
                    txtngaykt.ReadOnly = false;
                    txtpt.Enabled = true;
                    txtiddt.ReadOnly = false;
                    slulink.ReadOnly = false;
                    gridView1.OptionsBehavior.Editable = true;
                }
                catch
                {
                }
            }
        }

        t_todatatable _tTodatatable = new t_todatatable();
        private void txttiente_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
              
                var lst = (from a in new KetNoiDBDataContext().tientes select a).FirstOrDefault(t => t.tiente1 == txttiente.Text);
                txttygia.Text = lst.tygia.ToString();

                for (var i = 0; i <= gridView1.DataRowCount - 1; i++)
                {
                    try
                    {
                        gridView1.SetRowCellValue(i, "thanhtien",
                            double.Parse(gridView1.GetRowCellValue(i, "nguyente").ToString())*
                            double.Parse(txttygia.Text));
                    }
                    catch
                    {
                    }
                }
            }
            catch
            {
            }
        }


        private void btnfile_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (Biencucbo.hdhdtp == 0 || Biencucbo.hdhdtp == 1)
                return;
            Biencucbo.hopdong = txtid.Text;
            var frm = new f_themForm();
            frm.ShowDialog();
        }

        public void button_Click(object sender, EventArgs e)
        {
            var frm = new f_doituong();
            frm.ShowDialog();
            txtiddt.Properties.DataSource = new KetNoiDBDataContext().doituongs;
        }

        private void txtiddt_Popup(object sender, EventArgs e)
        {
            var popupControl = sender as IPopupControl;
            var button = new SimpleButton
            {
                Image = Resources.icons8_Add_File_16,
                Text = "Edit",
                BorderStyle = BorderStyles.NoBorder
            };

            button.Click += button_Click;

            button.Location = new Point(5, popupControl.PopupWindow.Height - button.Height - 5);
            popupControl.PopupWindow.Controls.Add(button);
            button.BringToFront();
        }

        private void txttiente_Popup(object sender, EventArgs e)
        {
            var popupControl = sender as IPopupControl;
            var button = new SimpleButton
            {
                Image = Resources.icons8_Add_File_16,
                Text = "Edit",
                BorderStyle = BorderStyles.NoBorder
            };

            button.Click += buttontiente_Click;

            button.Location = new Point(5, popupControl.PopupWindow.Height - button.Height - 5);
            popupControl.PopupWindow.Controls.Add(button);
            button.BringToFront();
        }

        public void buttontiente_Click(object sender, EventArgs e)
        {
            var frm = new f_tiente();
            frm.ShowDialog();
            txttiente.Properties.DataSource = new KetNoiDBDataContext().tientes;
        }

        private void btnthanhtoan_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (Biencucbo.hdhdtp == 0 || Biencucbo.hdhdtp == 1 || txtid.Text == "" || txtid.Text == "YYYY")
                return;

            Biencucbo.tt_tp = double.Parse(colnguyente.SummaryItem.SummaryValue.ToString());
            Biencucbo.hopdong = txtid.Text;
            var frm = new f_thanhtoan_tp();
            frm.ShowDialog();
        }

        private void slklhd_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
                var lst = (from a in db.cloaihds select a).Single(t => t.id == slklhd.Text);
                lblloaihd.Text = lst.loai;
            }
            catch
            {
                lblloaihd.Text = "";
            }
        }

        private void slklhd_Popup(object sender, EventArgs e)
        {
            var popupControl = sender as IPopupControl;
            var button = new SimpleButton
            {
                Image = Resources.icons8_Add_File_16,
                Text = "Thêm mới",
                BorderStyle = BorderStyles.NoBorder
            };

            button.Click += buttonlhd_Click;

            button.Location = new Point(5, popupControl.PopupWindow.Height - button.Height - 5);
            popupControl.PopupWindow.Controls.Add(button);
            button.BringToFront();
        }

        public void buttonlhd_Click(object sender, EventArgs e)
        {
            var frm = new f_themloaihd();
            frm.ShowDialog();
            slklhd.Properties.DataSource = new KetNoiDBDataContext().cloaihds;
        }

        private void f_hopdong_tp_KeyDown(object sender, KeyEventArgs e)
        {
            if (e.Control)
            {
                
                if (e.KeyCode == Keys.N)
                {
                    if (btnthemmoi.Enabled)
                        them();
                }
                else if (e.KeyCode == Keys.S)
                {
                    if (btnLuu.Enabled)
                        luu();
                }
                else if (e.KeyCode == Keys.U)
                {
                    if (btnsua.Enabled)
                        sua();
                }
                else if (e.KeyCode == Keys.D)
                {
                    if (btnxoa.Enabled)
                        xoa();
                }
                else if (Biencucbo.hdpn != 2)
                {

                    if (e.KeyCode == Keys.Delete)
                    {
                        if (Biencucbo.hdpn == 1)
                        {
                            try
                            {
                                var ct =
                                    (from c in db.pnhapcts select c).Single(
                                        x => x.id == gridView1.GetFocusedRowCellValue("id").ToString());
                                db.pnhapcts.DeleteOnSubmit(ct);
                            }
                            catch
                            {
                            }

                        }
                        gridView1.DeleteRow(gridView1.FocusedRowHandle);
                    }
                }

            }
            else if (e.KeyCode == Keys.F5)
            {
                if (btnload.Enabled)
                    reload();
            }

            if (Biencucbo.hdhdtp != 2)
            {
                if (e.KeyCode == Keys.Insert)
                {
                    gridView1.AddNewRow();
                }
             
            }
        }
    }
}