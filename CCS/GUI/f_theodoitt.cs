using System;
using System.Linq;
using System.Windows.Forms;
using BUS;
using ControlLocalizer;
using DAL;
using DevExpress.Data;
using DevExpress.XtraBars;
using DevExpress.XtraEditors;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Base;
using DevExpress.XtraGrid.Views.Grid;
using Lotus;

namespace GUI
{
    public partial class f_theodoitt : Form
    {
        private KetNoiDBDataContext db = new KetNoiDBDataContext();
        private t_hopdong hd = new t_hopdong();

        private readonly t_history hs = new t_history();
        t_todatatable _tTodatatable = new t_todatatable();
        public f_theodoitt()
        {
            InitializeComponent();


            //trans
            if (Biencucbo.ngonngu.ToString() == "Vietnam")
            {
                gridColumn1.Summary.AddRange(new GridSummaryItem[]
                {
                    new GridColumnSummaryItem(SummaryItemType.Sum, "diengiai", "Tổng cộng:")
                });
            }
            else //lao
            {
                gridColumn1.Summary.AddRange(new GridSummaryItem[]
                {
                    new GridColumnSummaryItem(SummaryItemType.Sum, "diengiai", "ລວມທັງໝົດ:")
                });
            }


            // This line of code is generated by Data Source Configuration Wizard
        }

        // phân quyền 
        protected override void OnActivated(EventArgs e)
        {
            base.OnActivated(e);
            var q = Biencucbo.QuyenDangChon;
            if (q == null) return;

            if ((bool) q.Sua)
            {
                btnsua.Visibility = BarItemVisibility.Always;
            }
            else
            {
                btnsua.Visibility = BarItemVisibility.Never;
            }
        }

        //load
        public void load()
        {
            db = new KetNoiDBDataContext();


            // Enable


            gridView1.OptionsBehavior.Editable = false;
            btnLuu.Enabled = false;
            btnload.Enabled = false;
            btnsua.Enabled = true;

            try
            {
                var lst1 = (from b in db.thanhtoan_tps select b).FirstOrDefault(t => t.id == Biencucbo.ma);
                if (lst1 == null) return;
                gcchitiet.DataSource = lst1.theodoitts;
                txtgt.Text = Biencucbo.theodoitt.ToString();

                txtcl.Text =
                    (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                txtgtth.Text = Biencucbo.theodoith.ToString();
                txtclth.Text =
                    (double.Parse(txtgtth.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                Biencucbo.theodoitt = 2;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
        }

        //Lưu

        public void luu()
        {
            try
            {
                LuuPhieu();


                gridView1.OptionsBehavior.Editable = false;
                Biencucbo.theodoitt = 2;
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
        }

        private void btnLuu_ItemClick(object sender, ItemClickEventArgs e)
        {
            gridView1.PostEditor();
            luu();
            hs.add(Biencucbo.ma, "Điều chỉnh theo dõi chuyển tiền hd thầu phụ");
            gridView1.PostEditor();


            gridView1.PostEditor();
            var test = double.Parse(coltt.SummaryItem.SummaryValue.ToString());
            txtcl.Text = (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
            txtclth.Text =
                (double.Parse(txtgtth.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();

            btnsua.Enabled = true;

            btnLuu.Enabled = false;
            btnreload.Enabled = false;
            gridView1.OptionsBehavior.Editable = false;
        }

        private bool LuuPhieu()
        {
            layoutControl1.Validate();
            gridView1.CloseEditor();
            gridView1.UpdateCurrentRow();

            try
            {
                db.theodoitts.Context.SubmitChanges();
            }
            catch (Exception ex)
            {
                XtraMessageBox.Show(ex.Message);
                return false;
            }

            return true;
        }

        private void btnsua_ItemClick(object sender, ItemClickEventArgs e)
        {
            gridView1.OptionsBehavior.Editable = true;
            Biencucbo.theodoitt = 1;
            btnsua.Enabled = false;
            btnLuu.Enabled = true;
            btnload.Enabled = true;

            ////load
        }

        private void btnin_ItemClick(object sender, ItemClickEventArgs e)
        {
            //var lst = (from a in db.r_pxuats where a.id == txtid.Text select a);
            //r_pxuat xtra = new r_pxuat();

            //xtra.DataSource = _tTodatatable.addlst(lst.ToList());
            //xtra.ShowPreviewDialog();
        }

        private void btnload_ItemClick(object sender, ItemClickEventArgs e)
        {
            load();
        }


        private void gridView1_CellValueChanged(object sender, CellValueChangedEventArgs e)
        {
            gridView1.PostEditor();

            if (e.Column.FieldName == "sotienchuyen")
            {
                try

                {
                    gridView1.PostEditor();
                    var test = double.Parse(coltt.SummaryItem.SummaryValue.ToString());
                    txtcl.Text =
                        (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                    txtclth.Text =
                        (double.Parse(txtgtth.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                }
                catch (Exception)
                {
                }
            }
        }

        private void gridView1_KeyDown(object sender, KeyEventArgs e)
        {
            if (Biencucbo.theodoitt != 2)
            {
                if (e.KeyCode == Keys.Insert)
                {
                    gridView1.AddNewRow();
                }
                else if (e.KeyCode == Keys.Delete)
                {
                    if (Biencucbo.theodoitt == 1)
                    {
                        try
                        {
                            var ct =
                                (from c in db.theodoitts select c).Single(
                                    x => x.id == gridView1.GetFocusedRowCellValue("id").ToString());
                            db.theodoitts.DeleteOnSubmit(ct);
                            gridView1.PostEditor();
                        }
                        catch
                        {
                        }
                    }
                    gridView1.DeleteRow(gridView1.FocusedRowHandle);

                    txtcl.Text =
                        (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                    txtclth.Text =
                        (double.Parse(txtgtth.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
                }
            }
        }


        //add new row
        private void gridView1_InitNewRow(object sender, InitNewRowEventArgs e)
        {
            int i = 0, k = 0;
            string a;

            k = gridView1.DataRowCount;
            a = Biencucbo.ma + k;

            for (i = 0; i <= gridView1.DataRowCount - 1;)
            {
                if (a == gridView1.GetRowCellValue(i, "id").ToString())
                {
                    k = k + 1;
                    a = Biencucbo.ma + k;
                    i = 0;
                }
                else
                {
                    i++;
                }
            }


            gridView1.SetFocusedRowCellValue("id", a);
            gridView1.SetFocusedRowCellValue("idtt", Biencucbo.ma);
            gridView1.SetFocusedRowCellValue("sotienchuyen", 0);
            gridView1.SetFocusedRowCellValue("ngaychuyen",
                new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day));
            gridView1.SetFocusedRowCellValue("ghichu", "");
        }

        private void f_hd_FormClosing(object sender, FormClosingEventArgs e)
        {
            if (Biencucbo.theodoitt != 2)
            {
                var a =
                    MsgBox.ShowYesNoCancelDialog("Bạn Chưa lưu phiếu này - Bạn có muốn lưu lại trước khi đóng không?");
                if (a == DialogResult.Yes)
                {
                    luu();
                }
                else if (a == DialogResult.Cancel) e.Cancel = true;
            }
        }


        private void f_hd_Load(object sender, EventArgs e)
        {
            LanguageHelper.Translate(this);
            LanguageHelper.Translate(barManager1);
            Text = LanguageHelper.TranslateMsgString("." + Name + "_title",
                "Theo Dõi CHuyển Tiền Thanh Toán Hợp Đồng Thầu phụ");

            changeFont.Translate(this);
            changeFont.Translate(barManager1);

            load();
        }


        private void gridView1_Click(object sender, EventArgs e)
        {
            gridView1.PostEditor();
            var test = double.Parse(coltt.SummaryItem.SummaryValue.ToString());
            txtcl.Text = (double.Parse(txtgt.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
            txtclth.Text =
                (double.Parse(txtgtth.Text) - double.Parse(coltt.SummaryItem.SummaryValue.ToString())).ToString();
        }

        private void slklhd_Popup(object sender, EventArgs e)
        {
        }

        private void btnthem_ItemClick(object sender, ItemClickEventArgs e)
        {

        }
    }
}