using System;
using System.Drawing;
using System.Linq;
using System.Windows.Forms;
using BUS;
using ControlLocalizer;
using DAL;
using DevExpress.DataProcessing;
using DevExpress.Utils.Win;
using DevExpress.XtraBars;
using DevExpress.XtraEditors;
using DevExpress.XtraEditors.Controls;
using DevExpress.XtraLayout.Utils;
using GUI.Properties;
using Lotus;
using DevExpress.XtraEditors.Popup;
using DevExpress.XtraGrid.Views.Grid;
using DevExpress.XtraLayout;
using DevExpress.XtraGrid.Editors;

namespace GUI
{
    public partial class f_themphuongtien : Form
    {
        private readonly KetNoiDBDataContext db = new KetNoiDBDataContext();
        private readonly t_phuongtien dt = new t_phuongtien();
        private readonly t_doituong dt2 = new t_doituong();
        private t_lichsu_phuongtien ls = new t_lichsu_phuongtien();

        public f_themphuongtien()
        {
            InitializeComponent();

            // This line of code is generated by Data Source Configuration Wizard
            txtnhom.Properties.DataSource = new KetNoiDBDataContext().nhomphuongtiens;
            // This line of code is generated by Data Source Configuration Wizard
            txtmadv.Properties.DataSource = new KetNoiDBDataContext().congtrinhs;
            // This line of code is generated by Data Source Configuration Wizard
            txttiente.Properties.DataSource = new  KetNoiDBDataContext().tientes;
            txtlinkhopdong.Properties.DataSource = new KetNoiDBDataContext().hopdongmuaxes;

            // This line of code is generated by Data Source Configuration Wizard
            txttinhtrang.Properties.DataSource = new KetNoiDBDataContext().tinhtrangs;
        }

        private void f_themdoituong_Load(object sender, EventArgs e)
        {
            LanguageHelper.Translate(this);
            LanguageHelper.Translate(barManager1);
            Text = LanguageHelper.TranslateMsgString("." + Name + "_title", "Thêm Phương Tiện");

            changeFont.Translate(this);
            changeFont.Translate(barManager1);

            btntaodoituong.Enabled = false;

            if (Biencucbo.pt == 1)
            {
                txtid.Enabled = false;
                //var Lst = (from dt in db.phuongtiens where dt.id == Biencucbo.ma select dt).ToList();
                var Lst = (from dt in db.phuongtiens select dt).Single(t => t.id == Biencucbo.ma);

                txtid.Text = Lst.id;
                txtten.Text = Lst.ten;
                txtnhom.Text = Lst.nhom;
                txtso.Text = Lst.so;
                txttinhtrang.Text = Lst.tinhtrang;
                txtsohd.Text = Lst.sohd;
                //txtcavet.Text = Lst.cavet;
                //try
                //{
                //    txtngaycavet.DateTime = DateTime.Parse(Lst.ngaydkcavet.ToString());
                //}
                //catch (Exception ex)
                //{                    
                //}
                txtmadv.Text = Lst.madv;
                txtsokhung.Text = Lst.sokhung;
                txtghichu.Text = Lst.ghichu;
                txtsomay.Text = Lst.somay;
                txtnuocsx.Text = Lst.nuocsx;
                txtttmua.Text = Lst.tinhtrangmua;
                txtdinhmuc.Text = Lst.dinhmuc.ToString();
                txtlinkhopdong.Text = Lst.linkhopdong;
                txtgiatri.Text = Lst.giatri.ToString();
                txttiente.Text = Lst.tiente;
                txtdvdinhmuc.Text = Lst.dvdinhmuc;
                try
                {
                    txtngay.DateTime = DateTime.Parse(Lst.ngaycapnhat.ToString());
                }
                catch
                {
                }
            }
            else if (Biencucbo.pt == 0)
            {
                txtngay.DateTime = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
            }
        }

        private void txtnhom_Popup(object sender, EventArgs e)
        {
            var popupControl = sender as IPopupControl;
            var button = new SimpleButton
            {
                Image = Resources.icons8_Add_File_16,
                Text = "Thêm mới",
                BorderStyle = BorderStyles.NoBorder
            };
            button.Click += button_Click;

            button.Location = new Point(5, popupControl.PopupWindow.Height - button.Height - 5);
            popupControl.PopupWindow.Controls.Add(button);
            button.BringToFront();
        }

        public void button_Click(object sender, EventArgs e)
        {
            var frm = new f_themnhomphuongtien();
            frm.ShowDialog();
            txtnhom.Properties.DataSource = new KetNoiDBDataContext().nhomphuongtiens;
        }

        private void btnhuy_ItemClick(object sender, ItemClickEventArgs e)
        {
            Close();
        }

        private void luu_ItemClick(object sender, ItemClickEventArgs e)
        {
            if (txtid.Text == "" || txtten.Text == "" || txtso.Text == "" || 
                txtmadv.Text == "" )
            {
                MsgBox.ShowWarningDialog("Thông tin chưa đầy đủ - Vui lòng kiểm tra lại!");
            }
            else
            {
                if (Biencucbo.pt == 0)
                {
                    //khong cho trung ID va Ten
                    var Lst =
                        (from dt in db.phuongtiens where dt.id == txtid.Text || dt.ten == txtten.Text select dt).ToList();

                    if (Lst.Count == 1)
                    {
                        MsgBox.ShowErrorDialog("Phương Tiện này đã tồn tại, Vui Lòng Kiểm tra Lại");
                    }
                    else
                    {
                        if (txtid.Text != "")
                        {
                            var lst2 = from a in db.phuongtiens where a.id == txtid.Text select a;
                            if (lst2.Count() != 0)
                            {
                                MsgBox.ShowErrorDialog("Mã Phương Tiện không được phép trùng, Vui Lòng Kiểm tra Lại");
                                return;
                            }
                        }

                        if (txtngay.Text == "") txtngay.DateTime = DateTime.Now;
                        dt.moi(txtid.Text.Trim(), txtten.Text, txtnhom.Text, txtso.Text, txttinhtrang.Text,
                         txtmadv.Text, txtsokhung.Text, DateTime.Parse(txtngay.Text), txtghichu.Text,
                            txtsomay.Text, txtnuocsx.Text, txtttmua.Text, Biencucbo.donvi, double.Parse(txtdinhmuc.Text),
                            txtdvdinhmuc.Text, txtsohd.Text, txttiente.Text, double.Parse(txtgiatri.Text), txtlinkhopdong.Text);//, txtcavet.Text, txtngaycavet.DateTime);

                        //this.Close();
                        btnluu.Enabled = false;
                        btntaodoituong.Enabled = true;

                        txtid.ReadOnly = true;
                        txtten.ReadOnly = true;
                        txtso.ReadOnly = true;
                        txtnhom.ReadOnly = true;
                        txtngay.ReadOnly = true;
                        //txtngaycavet.ReadOnly = true;
                        txtsohd.ReadOnly = true;
                        //txtcavet.ReadOnly = true;
                        txtsokhung.ReadOnly = true;
                        txtmadv.ReadOnly = true;
                        txttinhtrang.ReadOnly = true;
                        txtsomay.ReadOnly = true;
                        txtnuocsx.ReadOnly = true;
                        txttinhtrang.ReadOnly = true;
                      
                        txtghichu.ReadOnly = true;
                        txtdvdinhmuc.ReadOnly = true;
                        txtdinhmuc.ReadOnly = true;

                        txtid.Enabled = false;
                        txtten.Enabled = false;
                        txtso.Enabled = false;
                        txtnhom.Enabled = false;
                        txtngay.Enabled = false;
                      
                        txtsokhung.Enabled = false;
                        txtmadv.Enabled = false;
                        txttinhtrang.Enabled = false;
                        txtsomay.Enabled = false;
                        txtnuocsx.Enabled = false;
                        txttinhtrang.Enabled = false;
                    
                        txtghichu.Enabled = false;
                        txtdvdinhmuc.Enabled = false;
                        txtdinhmuc.Enabled = false;
                    }
                }

                else //sua
                {
                    var Lst =
                        (from l in db.phuongtiens where l.ten == txtten.Text && l.id != txtid.Text select l).ToList();

                    if (Lst.Count == 1)
                    {
                        MsgBox.ShowErrorDialog("Phương Tiện này đã tồn tại, Vui Lòng Kiểm tra Lại");
                    }
                    else
                    {
                        dt.sua(txtid.Text, txtten.Text, txtnhom.Text, txtso.Text, txttinhtrang.Text,
                             txtmadv.Text, txtsokhung.Text, DateTime.Parse(txtngay.Text), txtghichu.Text,
                            txtsomay.Text, txtnuocsx.Text, txtttmua.Text, double.Parse(txtdinhmuc.Text),
                            txtdvdinhmuc.Text, txtsohd.Text, txttiente.Text,double.Parse(txtgiatri.Text),txtlinkhopdong.Text);//, txtcavet.Text,  txtngaycavet.DateTime);

                        //this.Close();
                        //btnluu.Enabled = false;
                        luu.Enabled = false;
                        btntaodoituong.Enabled = true;
                    }
                }
            }
        }

        private void btntaodoituong_Click(object sender, EventArgs e)
        {
            var Lst = (from dt in db.doituongs where dt.id == txtid.Text.Trim() select dt).ToList();

            if (Lst.Count == 1)
            {
                MsgBox.ShowErrorDialog("Đối tượng này đã tồn tại, Vui Lòng Kiểm tra Lại");
            }
            else
            {
                dt2.moi(txtid.Text.Trim(), txtten.Text, "Xe Máy", "", "", "", "", "", "", "", "", "", "", txtmadv.Text);
                Close();
            }
        }

        private void txtnhom_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
                var list = (from a in db.nhomphuongtiens select a).Single(t => t.id == txtnhom.Text);
                lblnhompt.Text = list.ten;
            }
            catch
            {
            }
        }

    

        private void txtmadv_EditValueChanged(object sender, EventArgs e)
        {
            try
            {
                var list = (from a in db.congtrinhs select a).Single(t => t.id == txtmadv.Text);
                lblcongtrinh.Text = list.tencongtrinh;
            }
            catch
            {
            }
        }

        private void txttinhtrang_Popup(object sender, EventArgs e)
        {
            var form = (sender as IPopupControl).PopupWindow as PopupSearchLookUpEditForm;
            var pop = form.Controls.OfType<SearchEditLookUpPopup>().FirstOrDefault();
            LayoutControl popupControl = pop.Controls.OfType<LayoutControl>().FirstOrDefault();
            Control clearBtn =
                popupControl.Controls.OfType<Control>().Where(ct => ct.Name == "btClear").FirstOrDefault();
            LayoutControlItem clearLCI = (LayoutControlItem) popupControl.GetItemByControl(clearBtn);
            LayoutControlItem myLCI = (LayoutControlItem) clearLCI.Owner.CreateLayoutItem(clearLCI.Parent);
            LayoutControlItem myrefresh = (LayoutControlItem) clearLCI.Owner.CreateLayoutItem(clearLCI.Parent);

            //btn edit
            var btnadd = new SimpleButton
            {
                Image = Resources.edit_16x16,
                Text = "Add/Edit",
                BorderStyle = BorderStyles.Default
            };
            btnadd.Click += btnadd_Click;

            // BTN load
            var btnreload = new SimpleButton
            {
                Image = Resources.refresh_16x16,
                Text = "Refresh",
                BorderStyle = BorderStyles.Default
            };
            btnreload.Click += btnreload_Click;
            var edit = sender as SearchLookUpEdit;
            var popupForm = edit.GetPopupEditForm();
            popupForm.KeyPreview = true;
            popupForm.KeyUp -= txt_KeyUp;
            popupForm.KeyUp += txt_KeyUp;
            if (checkbtn)
            {
                myLCI.Control = btnadd;
                myLCI.Move(clearLCI, InsertType.Left);
                myrefresh.Control = btnreload;
                myrefresh.Move(myLCI, InsertType.Left);

                checkbtn = false;
            }
        }

        private bool checkbtn = true;

        private void loadslutxttinhtrang()
        {
            txttinhtrang.Properties.DataSource = (from a in new KetNoiDBDataContext().tinhtrangs select a);
        }

        public void btnadd_Click(object sender, EventArgs e)
        {
                //try
                //{
                //    Biencucbo.QuyenDangChon =
                //        (from a in new KetNoiDBDataContext().PhanQuyen2s select a).Single(t => t.ChucNang == "btnform");
                //}
                //catch (Exception ex)
                //{
                //    MessageBox.Show(ex.ToString());
                //}
            var frm = new f_tinhtrang();
            frm.ShowDialog();
            loadslutxttinhtrang();
            txttinhtrang.ShowPopup();
        }

        public void btnreload_Click(object sender, EventArgs e)
        {
            loadslutxttinhtrang();
            txttinhtrang.ShowPopup();
        }

        private static void txt_KeyUp(object sender, KeyEventArgs e)
        {
            PopupSearchLookUpEditForm popupForm = sender as PopupSearchLookUpEditForm;
            if (e.KeyData == Keys.Enter)
            {
                GridView view = popupForm.OwnerEdit.Properties.View;
                view.FocusedRowHandle = 0;
                popupForm.OwnerEdit.ClosePopup();
            }
        }

        private void btnxem_Click(object sender, EventArgs e)
        {
            try
            {
                if (txtlinkhopdong.Text != string.Empty)
                {
                    string key = (from a in db.hopdongmuaxes select a).First(t => t.sohd == txtlinkhopdong.Text).key;
                    Biencucbo.key = key;
                    Biencucbo.hdong = 2;
                    var frm = new HoSoXeMay.f_themhopdongmuaxe();
                    frm.ShowDialog();
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.ToString());
            }
        }
    }
}